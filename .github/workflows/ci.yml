name: ci
on:
  pull_request:
    branches: [ main ]
  release:
    types: [published]
  push:
    tags:
    branches:
      - main

jobs:
  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false

      matrix:
        # ci for only ubuntu and windows. No plans to support macos
        os:
          - ubuntu-20.04
          - windows-2019
        compiler:
          - llvm-15.0.2
          - gcc-11
        generator:
          - "Ninja Multi-Config"
        build_type:
          - Release

        exclude:
          # mingw is determined by this author to be too buggy to support
          - os: windows-2019
            compiler: gcc-11

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Cache
        uses: ./.github/actions/setup_cache
        with:
          compiler: ${{ matrix.compiler }}
          build_type: ${{ matrix.build_type }}
          generator: ${{ matrix.generator }}

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows' )}}

          cmake: true
          ninja: true
          vcpkg: false
          ccache: true
      
      - name: Unix - Install required libraries
        if: runner.os != 'Windows'
        run: |
          sudo apt-get update -qq
          sudo apt-get install gcc-multilib
          sudo apt-get install -y --no-install-recommends libglfw3 libglfw3-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev libwayland-dev libxkbcommon-dev

      - name: Configure CMake
        run: |
          cmake -S . -B ./build -G "${{matrix.generator}}" -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
      - name: Build
        run: |
          cmake --build ./build --config ${{matrix.build_type}}

      - name: CTest
        working-directory: ./build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: |
          ctest -C ${{matrix.build_type}}